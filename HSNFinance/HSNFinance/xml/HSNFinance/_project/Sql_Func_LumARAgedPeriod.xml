<Sql TableName="Func_LumARAgedPeriod" CustomScript="#CDATA">
    <CDATA name="CustomScript"><![CDATA[IF EXISTS
(
	SELECT *
	FROM
		sys.objects
	WHERE name = 'Func_LumARAgedPeriod' AND SCHEMA_ID = SCHEMA_ID('dbo')
)
DROP FUNCTION Func_LumARAgedPeriod
GO
CREATE FUNCTION Func_LumARAgedPeriod
(   
    @conditionPeriodID char(6),
	@CompanyID int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH InvoiceAndPMT AS (
		SELECT invRegister.CompanyID,
			   acct.AcctCD,
			   invRegister.FinPeriodID,
			   -- Invoice 匯率換算
			   CASE
				WHEN invRegister.CuryID != Company.BaseCuryID THEN
					ROUND(invRegister.CuryOrigDocAmt * ISNULL(invCurrency.CuryRate,0),0)
				ELSE
					invRegister.CuryOrigDocAmt END AS CuryOrigDocAmt,
			   CASE 
				WHEN invRegister.DueDate IS NULL AND invRegister.DocType = 'CRM' THEN
					DateAdd(month, 1 ,Convert(date, @conditionPeriodID + '01'))
				ELSE
					invRegister.DueDate END AS DueDate,
			   invRegister.RefNbr,
			   invRegister.DocType,
			   invRegister.CuryID,
			   invRegister.CuryInfoID,
			   -- Payment 匯率換算
			   CASE 
				WHEN invPayment.AdjFinPeriodID IS NOT NULL AND pmtRegister.RefNbr IS NOT NULL THEN
				-- 如果幣別相同 = Payment金額; Report date未付款則0;匯率換算
					IIF( pmtRegister.CuryID =  Company.BaseCuryID, ISNULL(invAdjust.CuryAdjdAmt,0) ,
						IIF(pmtCurrency.CuryInfoID IS NULL,0,ROUND(invAdjust.CuryAdjdAmt * ISNULL(invCurrency.CuryRate,0),0)))
				ELSE  0 
			   END　AS 'PmtAmount',
			   company.BaseCuryID,
			   invPayment.AdjFinPeriodID AS 'PmtFinPeriod',
			   pmtRegister.RefNbr AS 'PmtRefNbr',
			   invPayment.RefNbr as 'invRefnbr',
			   invPayment.DocType as 'invType',
			   pmtCurrency.CuryInfoID AS pmtINfoID,
			   revAdjust.AdjgFinPeriodID AS ReverseFinPeriod,
			   revAdjust.AdjgRefNbr as ReverseRefNbr,
			   revAdjust.AdjgDocType as ReverseDocType,
				CASE 
				WHEN revAdjust.AdjgFinPeriodID IS NOT NULL AND revAdjust.AdjgRefNbr IS NOT NULL THEN
				-- Reverse直接乘上匯率
					IIF(revCurrency.CuryInfoID IS NULL,0,ROUND(revAdjust.CuryAdjgAmt * ISNULL(revCurrency.CuryRate,0),0))
				ELSE  0 
			   END　AS ReverseAmount
		FROM ARRegister invRegister 
		INNER JOIN Company company ON invRegister.CompanyID = company.CompanyID
		INNER JOIN CurrencyInfo invCurrency ON invRegister.CompanyID = invCurrency.CompanyID
										AND invRegister.CuryInfoID = invCurrency.CuryInfoID
		INNER JOIN Customer customer ON invRegister.CompanyID = customer.CompanyID
									AND invRegister.CustomerID = customer.BAccountID
									AND customer.CustomerClassID != 'INTERCO'
		INNER JOIN BAccount acct ON customer.CompanyID = acct.CompanyID
								AND customer.BAccountID = acct.BAccountID
		LEFT JOIN ARAdjust invAdjust ON invRegister.CompanyID = invAdjust.CompanyID
									AND invRegister.RefNbr = invAdjust.AdjdRefNbr
									AND invRegister.DocType = invAdjust.AdjdDocType
		-- 找Invoice /Debit memo/ Credit Memo 對應的Payment(Report Date之前)
		LEFT JOIN ARPayment invPayment ON invAdjust.CompanyID = invPayment.CompanyID
									  AND invAdjust.AdjgRefNbr = invPayment.RefNbr
									  AND invAdjust.AdjgDocType = invPayment.DocType 
									  AND invPayment.AdjFinPeriodID <= @conditionPeriodID
		LEFT JOIN ARRegister pmtRegister ON invPayment.CompanyID = pmtRegister.CompanyID
										AND invPayment.RefNbr = pmtRegister.RefNbr
										AND invPayment.DocType = pmtRegister.DocType
										AND pmtRegister.Released = 1
		LEFT JOIN CurrencyInfo pmtCurrency ON pmtRegister.CompanyID = pmtCurrency.CompanyID
										  AND pmtRegister.CuryInfoID = pmtCurrency.CuryInfoID
		-- 找Credit memo 反沖(Report Date之前)
		LEFT JOIN ARAdjust revAdjust ON invRegister.CompanyID = revAdjust.CompanyID
									AND invRegister.RefNbr = revAdjust.AdjgRefNbr
									AND invRegister.DocType = revAdjust.AdjgDocType 
									AND revAdjust.AdjgFinPeriodID <= @conditionPeriodID
									AND revAdjust.Released = 1
		LEFT JOIN CurrencyInfo revCurrency ON revAdjust.CompanyID = revCurrency.CompanyID
										  AND revAdjust.AdjgCuryInfoID = revCurrency.CuryInfoID 
		WHERE  invRegister.DocType IN('INV' ,'DRM','CRM')
		  AND invRegister.BatchNbr is not null 
		  AND invRegister.CuryOrigDocAmt != 0
		  AND invRegister.FinPeriodID <= @conditionPeriodID 
		),
		InvoiceFinalResult AS (
			  SELECT CompanyID,
					 Acctcd,
					 FinPeriodID,
					 CASE WHEN DocType = 'CRM' THEN 
						MAX(CuryOrigDocAmt) * -1 
					 ELSE MAX(CuryOrigDocAmt) END AS CuryOrigDocAmt,
					 DueDate,
					 RefNbr,
					 DocType ,
					 SUM(PmtAmount) AS PmtAmount,
					 SUM(ReverseAmount) AS ReverseAmount,
					 -- DocType = CRM -> Credit memo Amount + Payment Amount ; Invoice Amount - Payment Amount
					 IIF(DocType = 'CRM', MAX(CuryOrigDocAmt) * -1 + SUM(ISNULL(PmtAmount,0)) + SUM(ISNULL(ReverseAmount,0)), MAX(CuryOrigDocAmt) - SUM(ISNULL(PmtAmount,0))) AS ARBalance,
					 DATEDIFF(DAY, DueDate, DateAdd(day, -1, DateAdd(month, 1 ,Convert(date, @conditionPeriodID + '01')))) as 'DiffDays'
			  FROM InvoiceAndPMT
			  WHERE (PmtAmount = 0 OR PmtFinPeriod <= @conditionPeriodID) 
			  GROUP BY CompanyID,FinPeriodID,DueDate,RefNbr,DocType ,Acctcd 
	)
	SELECT *
	FROM InvoiceFinalResult
	WHERE ARBalance != 0 AND CompanyID = @CompanyID
)
GO]]></CDATA>
</Sql>